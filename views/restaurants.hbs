{{#extend "css"}}
<link rel="stylesheet" href="/css/restaurants.css">
{{/extend}}

<div class="page-restaurants container">
  {{#notEmpty orderParams}}
  <div class="row back-to-results-wrapper">
    <div class="col-md-12">
      <a class="back-to-results" href="/restaurants">Clear search</a>
    </div>
  </div>
  {{/notEmpty}}

  <div class="row">
    <div class="col-md-9 col-md-offset-3">{{> order_params_bar}}</div>
  </div>

  <div class="row">
    <div class="col-md-3">
      {{> restaurant_filters }}
      {{> restaurant_sort }}
    </div>
    <div class="col-md-9">
      <div class="list-group list-group-restaurants">
      {{#each restaurants}}
        {{#if is_unacceptable}}
        <a href="javascript: void(0);" class="list-group-item list-group-item-restaurant disabled{{#if is_hidden}} hide{{/if}}">
        {{else}}
        <a href="/restaurants/{{this.id}}{{queryParams ../../orderParams}}" class="list-group-item list-group-item-restaurant{{#if is_hidden}} hide{{/if}}">
        {{/if}}
          <div class="row">
            <div class="col-xs-1 logo-wrapper">
              <img class="business-logo" src="{{#if this.logo_mono_url}}{{filepicker this.logo_mono_url}}{{else}}{{filepicker ../../config.defaultMonoLogo}}{{/if}}" alt="{{this.name}}">
              <img class="business-logo business-logo-color" src="{{#if this.logo_url}}{{filepicker this.logo_url}}{{else}}{{filepicker ../../config.defaultLogo}}{{/if}}" alt="{{this.name}}">
            </div>
            <div class="col-xs-9 col">
              <h3 class="list-group-item-heading list-group-item-heading-restaurant">{{this.name}}</h3>
              <div class="list-group-item-restaurant-details">
                {{#if cuisine.length}}
                <ul class="list-restaurant-inline">
                {{#each cuisine}}
                  <li>{{this}}</li>
                {{/each}}
                </ul>
                {{/if}}
                <span class="dollar-meter">{{{dollarMeter this.price}}}</span>
                {{> tags tags }}
                {{#or2 this.delivery_fee this.minimum_order}}
                <div class="fee-info">
                  <dl class="dl-horizontal-inline">
                    {{#if ../delivery_fee}}
                    <dt>Delivery charge:</dt>
                    <dd>${{dollars ../../delivery_fee}}</dd>
                    {{/if}}

                    {{#if ../minimum_order}}
                    <dt>Order minimum:</dt>
                    <dd>${{dollars ../../minimum_order}}</dd>
                    {{/if}}
                  </dl>
                </div>
                {{/or2}}
              </div>
            </div>
            <div class="col-xs-2 rating-wrapper">
              {{#if this.yelp_data}}
              {{#if ../yelp_data.rating}}
              Rating on Yelp:
              <div class="rating">{{{ratingStars ../../yelp_data.rating}}}</div>
              {{/if}}
              {{/if}}
            </div>
          </div>
        </a>
        {{else}}
        <h1 class="text-center">No Restaurants</h1>
        {{/each}}
      </div>
    </div>
  </div>
</div>

{{#extend "scripts"}}
<script type="text/javascript">
  require([
      'jquery'
    , 'utils'
    , 'app/models/order-params'
    , 'app/views/order-params-view'
    , 'app/views/restaurant-filters-view'
    , 'app/views/restaurants-list-view'
    , 'bootstrap'
    ]
  , function($, utils, OrderParams, OrderParamsView, RestaurantFiltersView, RestaurantsListView) {
      $(".tag-tooltip").tooltip();

      var restaurants = {{{json allRestaurants}}};
      // Prepare listing to be usable by the facet serach
      utils.each( restaurants, function( r ){
        // Facet values need to be arrays
        r.prices = [r.price];
      });

      // Get existing filter criteria from the URL Parameters
      var existingCriteria = utils.parseQueryParams();

      // The URL parameters don't match up with the actual restaurant fields
      utils.each({
        mealStyles: 'meal_styles'
      , mealTypes:  'meal_types'
      , diets:      'tags'
      , cuisines:   'cuisine'
      }, function( newName, oldName, obj ){
        if ( obj[ oldName ] ){
          obj[ newName ] = obj[ oldName ];
          delete obj[ oldName ];
        }
      });

      if ( existingCriteria.prices ){
        utils.each( existingCriteria.prices, function( p, i, pp ){ pp[ i ] = +p; } );
      }

      var orderParams = new OrderParams();
      var orderParamsView = new OrderParamsView({model: orderParams, el: '.order-params-bar'});

      var restaurantFiltersView = new RestaurantFiltersView({
        el: '#filters'
      , existingCriteria: existingCriteria
      , restaurants: restaurants
      });

      var restaurantsListView = new RestaurantsListView({
        el: '#main'
      , filtersView: restaurantFiltersView
      , paramsView: orderParamsView
      , searchUrl: '/restaurants'
      });
    }
  );
</script>
{{/extend}}
