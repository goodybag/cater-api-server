{{#extend "body"}}
<div class="container page-header">
  <h1 class="page-title">{{restaurant.name}}</h1>
  <h2 class="page-sub-title">Payment Summary #{{payment_summary_id}}</h2>
  <ul class="header-nav">
    <li>
      <a href="/admin/restaurants/{{restaurant.id}}/payment-summaries">Go Back</a>
    </li>
    <li>
      <button id="save-payment-summary-btn" class="btn btn-success">Save Summary</button>
    </li>
    <li>
      <button id="delete-payment-summary-btn" class="btn btn-danger">Delete Summary</button>
    </li>
    <li>
      <button id="create-payment-summary-item-btn" class="btn btn-default">Create new Item</button>
    </li>
  </ul>
</div>

<div class="container page-content">
  <div class="table-actions">
    <h2 class="action-header payment-date-header">Payout Date</h2>
    <input type="date" name="payment_date" class="action">
    <h3 class="action-header">From</h3>
    <input type="date" name="order_from" class="action">
    <h3 class="action-header">To</h3>
    <input type="date" name="order_to" class="action">
    <button class="btn btn-default action" data-role="order-fetch">Fetch</button>
  </div>
  <table class="table table-striped" id="payment-summary-items-table"></table>
  <h3>Adjustment</h3>
  <div class="row">
    <div class="col-lg-4">
      <div class="form-vertical">
        <div class="form-group">
          <label>Adjustment Amount</label>
          <input class="form-control" type="number" name="pms_adjustment">
        </div>
        <div class="form-group">
          <label>Adjustment Text</label>
          <textarea class="form-control" placeholder="Here is the adjusment text" name="adjustment_text" cols="30" rows="10"></textarea>
        </div>
      </div>
    </div>
  </div>
</div>

<datalist id="orders-data-list"></datalist>
{{/extend}}

{{#extend "scripts"}}
<script>
  define(
    'data/payment-summary'
  , ['app/collections/payment-summaries']
  , function( PaymentSummaries ){
      return new PaymentSummaries( null, {
        restaurant_id: {{restaurant.id}}
      , sales_tax:          {{restaurant.sales_tax}}
      }).createModel({
        id: {{payment_summary_id}}
      , plan: {{{json restaurant.plan}}}
      });
    }
  );

  define(
    'data/payment-summary-items'
  , ['app/collections/payment-summary-items']
  , function( PaymentSummaryItems ){
      return new PaymentSummaryItems( null, {
        payment_summary_id: {{payment_summary_id}}
      , restaurant_id:      {{restaurant.id}}
      , sales_tax:          {{restaurant.sales_tax}}
      , plan:               {{{json restaurant.plan}}}
      });
    }
  );

  define(
    'data/orders'
  , ['app/collections/restaurant-orders']
  , function( Orders ){
      var OrdersOrig = Orders;
      Orders = Orders.extend({
        // Don't automatically parse the order type
        _prepareModel: function( attrs, options ){
          if ( attrs instanceof this.model ) return attrs;

          options = options || {};

          options.ignoreOrderTypeInit = true;

          return OrdersOrig.prototype._prepareModel.call( this, attrs, options );
        }
      })

      return new Orders( null, { restaurant_id: {{restaurant.id}} } );
    }
  );

  require( ['app/pages/restaurant-payment-summary'], function( page ){
    page.init();
  });
</script>
{{/extend}}