{{#extend "css"}}
<link rel="stylesheet" href="/css/edit-restaurant.css">
<link rel="stylesheet" href="/components/font-awesome/css/font-awesome.css">
{{/extend}}

{{#extend "navbar-links"}}
<li>
  <a href="/admin/restaurants/{{restaurant.id}}/payment-summaries">Payment Summaries</a>
</li>
{{/extend}}

<div class="container">
  <form id="restaurant-{{restaurant.id}}" class="restaurant-form form-vertical">
    {{> edit_restaurant_form}}
  </form>

  <fieldset>
    <legend>Menu</legend>
    <div>
      <a href="/restaurants/{{restaurant.id}}/sort">click here to sort this menu</a>
    </div>
    <div class="categories">
      {{#each restaurant.categories}}
      <div id="category-{{this.id}}" class="panel">
        {{> edit_category}}
      </div>
      {{/each}}
    </div>
  </fieldset>

  <div class="row">
    <div class="col-lg-1 col-lg-offset-11">
      <button type="button" class="btn btn-primary new-category pull-right">New Category</button>
    </div>
  </div>
</div>

{{#extend "scripts"}}
<script type="text/javascript">
(function(a){if(window.filepicker){return}var b=a.createElement("script");b.type="text/javascript";b.async=!0;b.src=("https:"===a.location.protocol?"https:":"http:")+"//api.filepicker.io/v1/filepicker.js";var c=a.getElementsByTagName("script")[0];c.parentNode.insertBefore(b,c);var d={};d._queue=[];var e="pick,pickMultiple,pickAndStore,read,write,writeUrl,export,convert,store,storeUrl,remove,stat,setKey,constructWidget,makeDropPane".split(",");var f=function(a,b){return function(){b.push([a,arguments])}};for(var g=0;g<e.length;g++){d[e[g]]=f(e[g],d._queue)}window.filepicker=d})(document);
</script>
<script type="text/javascript">filepicker.setKey('{{config.filepicker.key}}');</script>

<script>
  require([
      'app/models/restaurant'
    , 'app/views/edit-restaurant-view'
    , 'app/views/edit-category-view'
    , 'app/views/edit-item-view'
    , 'app/models/hours'
    , 'app/views/edit-hours-view'

    , 'jquery-ui'
    ]
  , function(Restaurant, EditRestaurantView, EditCategoryView, EditItemView, Hours, EditHoursView) {
      var hours = [
        {{#each restaurant.delivery_times}}
        new EditHoursView({model: new Hours({day: {{@key}}, times: {{{json this}}} }), el: '#hours-{{@key}}'}),
        {{/each}}
      ];

      var restaurant = new EditRestaurantView({ el: '#main', model: new Restaurant({{{json restaurant}}}), hours: hours });
      {{#each restaurant.categories}}
      var category{{this.id}} = new EditCategoryView({el: '#category-{{id}}', model: restaurant.model.categories.get({{id}}), restaurant: restaurant });
      category{{id}}.items = [{{#each items}}
        new EditItemView({el: '#edit-item-{{id}}', model: category{{../id}}.model.items.get({{id}}),  category: category{{../id}} }),
      {{/each}}];
      restaurant.categories.push(category{{id}});
      {{/each}}
    }
  );
</script>
{{/extend}}
